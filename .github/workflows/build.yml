name: Build and Push Derived Images

on:
  workflow_dispatch:
#  schedule:
#    - cron: "0 2 * * *"

env:
  REGISTRY: ghcr.io

jobs:
  get-tags:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.set-matrix.outputs.tags }}
      archs: ${{ steps.set-matrix.outputs.archs }}
    steps:
      - name: Get tags and architectures from Docker Hub
        id: set-matrix
        run: |
          NOW=$(date +%s)
          CUTOFF=$(date -d "-60 days" +%s)

          # Fetch all non-scratch tags younger than 2 months
          echo "Fetching tags..."
          curl -s "https://hub.docker.com/v2/repositories/garethgeorge/backrest/tags?page_size=100" \
          | jq -r --argjson cutoff $CUTOFF '
            .results[]
            | select(.name | contains("scratch") | not)
            | select((.last_updated | split(".")[0] + "Z" | fromdateiso8601) >= $cutoff)
            | {name: .name, archs: [.images[].architecture]}
          ' > tags_raw.json > tags.json
          cat tags.json

          # Tags as JSON array for matrix
          TAGS=$(jq -c '.[].name' tags.json | jq -s '.')
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "Tags: $TAGS"

          # Archs per tag as JSON object
          ARCHS=$(jq -c 'map({(.name): .archs}) | add' tags.json)
          echo "archs=$ARCHS" >> $GITHUB_OUTPUT
          echo "Archs: $ARCHS"

  build:
    needs: get-tags
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix:
        tag: ${{ fromJson(needs.get-tags.outputs.tags) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get upstream digest per tag
        id: digest
        run: |
          DIGEST=$(docker buildx imagetools inspect garethgeorge/backrest:${{ matrix.tag }} --raw | jq -r '.Digest')
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Check cache
        id: cache
        uses: actions/cache@v4
        with:
          path: .digest-cache
          key: ${{ runner.os }}-${{ matrix.tag }}-${{ steps.digest.outputs.digest }}

      - name: Skip if cached
        if: steps.cache.outputs.cache-hit == 'true'
        run: echo "Upstream unchanged, skipping build."

      - name: Set up QEMU
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Determine architectures for this tag
        id: arch
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ARCHS=$(echo '${{ needs.get-tags.outputs.archs }}' | jq -r --arg TAG "${{ matrix.tag }}" '.[$TAG] | join(",")')
          echo "archs=$ARCHS" >> $GITHUB_OUTPUT
          echo "Found archs: $ARCHS"

      - name: Prepare platforms
        id: platforms
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          PLATFORMS=$(echo "${{ steps.arch.outputs.archs }}" | awk -v OFS=',' '{for(i=1;i<=NF;i++) $i="linux/"$i} 1' | tr ' ' ',')
          echo "platforms=$PLATFORMS" >> $GITHUB_OUTPUT
          echo "Found platforms: $PLATFORMS"

      - name: Prepare image name
        id: imagename
        run: |
          IMAGE_NAME=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Login to the Container registry
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.imagename.outputs.image_name }}:${{ matrix.tag }}
          platforms: ${{ steps.platforms.outputs.platforms }}
          build-args: |
            BASE_IMAGE=garethgeorge/backrest:${{ matrix.tag }}
